<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.Repository.StudentRepository">
    <!--受講生の全件情報検索-->
    <select id="search" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM students
    </select>
    <!--受講生の情報検索-->

    <select id="searchStudent" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM students WHERE id = #{id}
    </select>
    <!--受講生のコース情報一覧検索-->
    <select id="searchStudentCoursesList" resultType="raisetech.StudentManagement.data.Student">
        SELECT * FROM students_courses
    </select>
    <!--受講生の新規登録-->
    <insert id="registerStudent" parameterType="raisetech.StudentManagement.data.Student" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO students ( name, furigana, nick_name, email_address, address, age, gender, remark, isDeleted )
        VALUES ( #{name}, #{furigana}, #{nickName}, #{emailAddress}, #{address}, #{age}, #{gender},
        #{remark}, false )
    </insert>
    <!--受講生のコース情報の新規登録-->
    <insert id="registerStudentCourse" parameterType="raisetech.StudentManagement.data.StudentCourse"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO students_courses ( student_id, course, enrollment_start_date, enrollment_end_date )
        VALUES ( #{studentId}, #{course}, #{enrollmentStartDate}, #{enrollmentEndDate} )
    </insert>
    <!--受講生の更新-->
    <update id="updateStudent" parameterType="raisetech.StudentManagement.data.Student">
        UPDATE students SET name = #{name}, furigana = #{furigana},
        nick_name = #{nickName}, email_address = #{emailAddress}, address = #{address}, age = #{age},
        gender = #{gender}, remark = #{remark}, isDeleted = #{isDeleted} WHERE id = #{id}
    </update>
    <!--受講生コース情報の更新-->
    <update id="updateStudentCourse" parameterType="raisetech.StudentManagement.data.StudentCourse">
        UPDATE students_courses SET course = #{course} WHERE id = #{id}
    </update>

    <!-- 受講生IDに紐づく受講生コース情報を検索 -->
    <select id="findCoursesByStudentId" parameterType="int" resultType="raisetech.StudentManagement.data.StudentCourse">
        SELECT * FROM students_courses WHERE student_id = #{studentId}
    </select>

</mapper>
